# TRANSACTION TO BASKET

CREATE OR REPLACE TABLE  `bads7105-308204.supermarket.basket` AS

SELECT *,
    DATE_DIFF(DATE'2008-07-06' ,SHOP_DATE,MONTH) AS LAST_VISIT
FROM (
    SELECT CAST(BASKET_ID AS STRING) AS BASKET_ID,
    CUST_CODE,
    CUST_PRICE_SENSITIVITY,
    CUST_LIFESTAGE,
    PARSE_DATE("%Y%m%d",CAST (SHOP_DATE AS STRING)) AS SHOP_DATE,
    SHOP_WEEKDAY,
    (case when shop_weekday in (1,7) then 1 else 0 end) as is_weekend,
    SHOP_HOUR,
    (CASE WHEN shop_hour <= 11 then 'morning' when shop_hour between 12 and 16 then 'afternoon' else 'evening' end) as shop_daytime,

    BASKET_SIZE,
    BASKET_TYPE,
    BASKET_PRICE_SENSITIVITY,
    BASKET_DOMINANT_MISSION,
    SUM(SPEND) AS TOTAL_SPEND
    FROM `bads7105-308204.supermarket.supermarket`
    WHERE CUST_CODE IS NOT NULL
    GROUP BY BASKET_ID,CUST_CODE,CUST_PRICE_SENSITIVITY,
    CUST_LIFESTAGE,SHOP_DATE,SHOP_WEEKDAY,SHOP_HOUR,BASKET_SIZE,BASKET_TYPE,BASKET_PRICE_SENSITIVITY,BASKET_DOMINANT_MISSION
    )


# BASKET TO CUSTOMER

CREATE TABLE `bads7105-308204.supermarket.customer` as

SELECT *,
# CUSTOMER PRICE SENSIVITY (“LA’=Less Affluent, “MM”=Mid Market, “UM”=Up Market, “XX”=Unclass)
(CASE WHEN CUST_PRICE_SENSITIVITY = 'LA' THEN 1 ELSE 0 END) AS CUS_PRICE_LA,
(CASE WHEN CUST_PRICE_SENSITIVITY = 'MM' THEN 1 ELSE 0 END) AS CUS_PRICE_MM,
(CASE WHEN CUST_PRICE_SENSITIVITY = 'UM' THEN 1 ELSE 0 END) AS CUS_PRICE_UM,

#CUSTOMER LIFESTAGE (“OA”=Older Adult, “OF”=Older Families, “OT”=Other, “PE”=Pensioners ,”YA”=Young Adults,”YF”=Young Families)
(CASE WHEN CUST_LIFESTAGE = 'OA' THEN 1 ELSE 0 END) AS CUS_LIFE_OA,
(CASE WHEN CUST_LIFESTAGE = 'OF' THEN 1 ELSE 0 END) AS CUS_LIFE_OF,
(CASE WHEN CUST_LIFESTAGE = 'OT' THEN 1 ELSE 0 END) AS CUS_LIFE_OT,
(CASE WHEN CUST_LIFESTAGE = 'PE' THEN 1 ELSE 0 END) AS CUS_LIFE_PE,
(CASE WHEN CUST_LIFESTAGE = 'YA' THEN 1 ELSE 0 END) AS CUS_LIFE_YA,
(CASE WHEN CUST_LIFESTAGE = 'YF' THEN 1 ELSE 0 END) AS CUS_LIFE_YF,

FROM (
SELECT CUST_CODE ,
CUST_PRICE_SENSITIVITY,
CUST_LIFESTAGE,

COUNT(DISTINCT BASKET_ID) AS TOTAL_VISIT,
SUM(TOTAL_SPEND) AS TOTAL_SPEND,
ROUND(AVG(TOTAL_SPEND),2) AS AVG_SPEND,
MIN(LAST_VISIT) AS LAST_VISIT,
COALESCE(SAFE_DIVIDE(COUNT(DISTINCT BASKET_ID),DATE_DIFF(MAX(SHOP_DATE),MIN(SHOP_DATE),MONTH)),0) AS AVG_VISIT_PER_MONTH,

# NO OF MONTH BETWEEN FIRST VISIT AND LAST VISIT
DATE_DIFF(MAX(SHOP_DATE),MIN(SHOP_DATE),MONTH) AS AGE,

# PROBABILITY TO VISIT ON WEEKDAY & WEEKEND
COALESCE(SAFE_DIVIDE(SUM(is_weekend),COUNT(DISTINCT BASKET_ID)),0) AS PROB_WEEKEND,
COALESCE(SAFE_DIVIDE(SUM(IF(is_weekend=0,1,0)),COUNT(DISTINCT BASKET_ID)),0) AS PROB_WEEKDAY,

# PROBABILITY TO VISIT ON TIME
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN shop_daytime = 'morning' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_MORNING,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN shop_daytime = 'afternoon' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_AFTERNOON,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN shop_daytime = 'evening' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_EVENING,

# PROBABILITY OF BASKET SIZE TO TOTAL VISIT
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_SIZE='L' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_L,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_SIZE='M' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_M,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_SIZE='S' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_S,

# PROBABILITY OF BASKET TYPE TO TOTAL VISIT
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_TYPE='Full Shop' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_TYPE_FULL,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_TYPE='Small Shop' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_TYPE_SMALL,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_TYPE='Top Up' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_TYPE_TOPUP,

# PROBABILITY OF BASKET PRICE SENSITIVITY TO TOTAL VISIT
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_PRICE_SENSITIVITY='LA' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_PRICE_LA,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_PRICE_SENSITIVITY='MM' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_PRICE_MM,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_PRICE_SENSITIVITY='UM' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_PRICE_UM,

# PROBABILITY OF BASKET DOMINANT TO TOTAL VISIT
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_DOMINANT_MISSION='Fresh' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_DOMI_FRESH,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_DOMINANT_MISSION='Grocery' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_DOMI_GROCERY,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_DOMINANT_MISSION='Mixed' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_DOMI_MIXED,
COALESCE(SAFE_DIVIDE(SUM(CASE WHEN BASKET_DOMINANT_MISSION='Nonfood' THEN 1 ELSE 0 END),COUNT(DISTINCT BASKET_ID)),0) AS PROB_BAS_DOMI_NONFOOD

FROM `bads7105-308204.supermarket.basket`

GROUP BY CUST_CODE,CUST_PRICE_SENSITIVITY,CUST_LIFESTAGE)

# MODEL
CREATE  MODEL
`bads7105-308204.supermarket.mymodel_revisit_s`

OPTIONS
( MODEL_TYPE='KMEANS',
NUM_CLUSTERS=4,
KMEANS_INIT_METHOD='RANDOM') AS

SELECT 
PROB_BAS_DOMI_FRESH,
PROB_BAS_DOMI_GROCERY,
PROB_BAS_DOMI_MIXED,
PROB_BAS_DOMI_NONFOOD
FROM `bads7105-308204.supermarket.customer`
WHERE CUST_CODE IS NOT NULL AND TOTAL_VISIT>1

# Cluster by CUST_CODE
select
    * except(nearest_centroids_distance)
from 
    ML.PREDICT(MODEL `bads7105-308204.supermarket.mymodel4`,
    (

SELECT 

AGE,
LAST_VISIT,
PROB_AFTERNOON,
PROB_EVENING,
PROB_BAS_M,
PROB_BAS_S,
PROB_WEEKEND,
PROB_WEEKDAY
FROM `bads7105-308204.supermarket.customer`
WHERE CUST_CODE IS NOT NULL

    ))

